1. Для заданного направленного графа разработайте алгоритм, проверяющий существование маршрута между двумя узлами.
2. Напишите алгоритм создания бинарного дерева поиска с минимальной высотой для отсортированного (по возрастанию)
массива с уникальными целочисленными элементами.
3. Для бинарного дерева разработайте алгоритм, который создает связный список всех узлов, находящихся на каждой глубине
(для дерева с глубиной 0 должно получиться 0 связных списков).
4. Реализуйте функцию, проверяющую сбалансированность бинарного дерева. Будем считать дерево сбалансированным,
если разница высот двух поддеревьев любого узла не превышает 1.
5. Реализуйте функцию для проверки того, является ли бинарное дерево бинарным деревом поиска.
6. Напишите алгоритм поиска «следующего» узла для заданного узла в бинарном дереве поиска. Считайте, что у каждого узла
есть ссылка на его родителя.
7. Имеется список проектов и список зависимостей (список пар проектов, для которых первый проект зависит от второго
проекта). Проект может быть построен только после построения всех его зависимостей. Найдите такой порядок построения,
который позволит построить все проекты. Если действительного порядка не существует, верните признак ошибки.
Пример:
Ввод:
проекты : а, Ь, с, d, е, f
зависимости : (d, а), (b, f), (d, b), (а, f), (с, d)
Вывод:
f, е, а, b, d, с
8. Создайте алгоритм и напишите код поиска первого общего предка двух узлов бинарного дерева. Постарайтесь избежать
хранения дополнительных узлов в структуре данных. Примечание: бинарное дерево не обязательно является бинарным деревом поиска.
9. Бинарное дерево поиска было создано обходом массива слева направо и вставкой каждого элемента. Для заданного
бинарного дерева поиска с разными элементами выведите все возможные массивы, которые могли привести к созданию этого дерева.
Пример:
Ввод:
Корень 2, левый подузел 1, правый подузел 3
Вывод: { 2, 1, 3 }, { 2, 3, 1 }
10. Т1 и Т2 – два очень больших бинарных дерева, причем Т1 значительно больше Т2. Создайте алгоритм, проверяющий,
является ли Т2 поддеревом Т1. Дерево Т2 считается поддеревом T1, если существует такой узел n в Т1, что поддерево,
«растущее» из n, идентично дереву Т2. (Иначе говоря, если вырезать дерево в узле n, оно будет идентично Т2.)
11. Вы пишете с нуля класс бинарного дерева поиска, который помимо методов вставки, поиска и удаления содержит метод
getRandomNode() для получения случайного узла дерева. Вероятность выбора всех узлов должна быть одинаковой.
Разработайте и реализуйте алгоритм getRandomNode; объясните, как вы реализуете остальные методы.
12. Дано бинарное дерево, в котором каждый узел содержит целое число (положительное или отрицательное). Разработайте
алгоритм для подсчета всех путей, сумма значений которых соответствует заданной величине. Обратите внимание, что путь
не обязан начинаться или заканчиваться в корневом или листовом узле, но он должен идти вниз (переходя только от
родительских узлов к дочерним).



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
1. Даны два 32-разрядных числа N и М и две позиции битов i и j. Напишите метод для вставки M в N так, чтобы число М
занимало позицию с бита j по бит i. Предполагается, что j и i имеют такие значения, что число М гарантированно
поместится в этот промежуток. Скажем, для М = 10011 можно считать, что j и i разделены как минимум 5 битами.
Комбинация вида j = 3 и i = 2 невозможна, так как число М не поместится между битом 3 и битом 2.Пример:
Ввод: N = 10000000000, М = 10011, i = 2, j = 6 Вывод: N = 10001001100
2. Дано вещественное число в интервале между 0 и 1 (например, 0.72), которое передается в формате double. Выведите его
двоичное представление. Если для точного двоичного представления числа не хватает 32 разрядов, выведите сообщение об ошибке.
3. Имеется целое число, в котором можно изменить ровно один бит из 0 в 1. Напишите код для определения длины самой
длинной последовательности единиц, которая может быть при этом получена.Пример:Ввод: 1775 (или : 11011101111) Вывод: 84.
4. Для заданного положительного числа выведите ближайшие наименьшее и наибольшее числа, которые имеют такое же
количество единичных битов в двоичном представлении.
5. Объясните, что делает код: (n & (n-1)) == 0.
6. Напишите функцию, определяющую количество битов, которые необходимо изменить, чтобы из целого числа А получить целое
число В.Пример:Ввод: 29 (или 11101), 15 (или 01111) Вывод: 2.
7. Напишите программу, меняющую местами четные и нечетные биты числа с минимальным количеством инструкций (например,
меняются местами биты 0 и 1, биты 2 и 3 и т. д.).
8. Содержимое монохромного экрана хранится в одномерном массиве байтов, так что в одном байте содержится информация о
восьми соседних пикселах. Ширина изображения w кратна 8 (то есть байты не переходят между столбцами). Высоту экрана
можно рассчитать, зная длину массива и ширину экрана. Реализуйте функцию, которая рисует горизонтальную линию из точки
(x1, у) в точку ( х2, у).Сигнатура метода должна выглядеть примерно так:
drawLine(byte[] screen, int width, int x1, int х2, int у)


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
1. Есть 20 баночек с таблетками. В 19 баночках лежат таблетки весом 1 г, а в одной - весом 1,1 г. Даны весы,
показывающие точный вес. Как за одно взвешивание найти банку с тяжелыми таблетками?
2. Имеется баскетбольное кольцо, и вам предлагается сыграть в одну из двух игр. Игра 1: У вас есть один бросок в кольцо.
Игра 2: У вас есть три попытки, но для победы потребуется не менее двух попаданий. Если р – вероятность попадания в
кольцо при броске, при каких значениях р следует выбирать ту или иную игру?
3. Имеется шахматная доска размером 8х8, из которой были вырезаны два противоположных по диагонали угла, и 31 кость
домино; каждая кость домино может закрыть два квадратика на поле. Можно ли вымостить костями всю доску? Обоснуйте ответ
(приведите пример или докажите, что это невозможно).
4. На каждой из трех вершин треугольника сидит муравей. Какова вероятность столкновения (на любой из сторон), если
муравьи начнут ползти по сторонам треугольника? Предполагается, что каждый муравей выбирает направление случайным образом,
вероятность выбора направлений одинакова, и все муравьи ползут с одинаковой скоростью. Также определите вероятность
столкновения для n муравьев на многоугольнике с n вершинами.
5. У вас есть пятилитровый и трехлитровый кувшины и неограниченное количество воды. Как отмерить ровно 4 литра воды?
Кувшины имеют неправильную форму, поэтому точно отмерить «половину» кувшина невозможно.
6. На остров приезжает гонец со странным приказом: все голубоглазые люди должны как можно скорее покинуть остров.
Самолет улетает каждый вечер в 20:00. Каждый человек может видеть цвет глаз других, но не знает цвет собственных
(и никто не имеет права сказать человеку, какой у него цвет глаз). Жители острова не знают, сколько на нем живет
голубоглазых; известно лишь то, что есть минимум один. Сколько дней потребуется, чтобы все голубоглазые уехали?
7. Королева нового постапокалиптического мира обеспокоена проблемой рождаемости. Она издает закон, по которому в каждой
семье должна родиться хотя бы одна девочка. Если все семьи повинуются закону, то есть заводят детей, пока не родится
девочка, после чего немедленно прекращают, - каким будет соотношение полов в новом поколении? (Предполагается,
что вероятности рождения мальчика или девочки равны.) Сначала решите задачу на логическом уровне, а затем напишите
компьютерную модель.
8. Имеется 100-этажное здание. Если яйцо сбросить с высоты N-го этажа (или с большей высоты), оно разобьется. Если его
бросить с меньшего этажа, оно не разобьется. У вас есть два яйца; найдите N за минимальное количество бросков.
9. В длинном коридоре расположены 100 закрытых замков. Человек сначала открывает все сто. Затем он закрывает каждый
второй замок. Затем он делает еще один проход - «переключает» каждый третий замок (если замок был открыт, то он его
закрывает, и наоборот). Процесс продолжается 100 раз, на i-м проходе изменяется состояние каждого i-го замка. Сколько
замков останутся открытыми после 100-го прохода, когда «переключается» только замок №100?
10. Имеется 1000 бутылок лимонада, ровно одна из которых отравлена. Также у вас есть 10 тестовых полосок для обнаружения
яда. Даже одна капля яда окрашивает полоску и делает ее непригодной для дальнейшего использования. На тестовую полоску
можно одновременно нанести любое количество капель, и одна полоска может использоваться сколько угодно раз (при условии,
что все пробы были отрицательными). Однако вы можете проводить испытания не чаще одного раза в день, а для получения
результата с момента проведения проходит семь дней. Как найти отравленную бутылку за минимальное количество дней?
Напишите программную модель вашего решения.
11. Для двух отрезков на плоскости, заданных их координатами, найдите точку пересечения, если она существует.
12. Напишите метод, определяющий максимальное из двух чисел без использования if-else или любых других операторов сравнения.
13. Напишите методы, реализующие операции вычитания, умножения и деления целых чисел с использованием только операции сложения.



1. Разработайте структуры данных для универсальной колоды карт. Объясните, как разделить структуры данных на субклассы,
чтобы реализовать игру в блэкджек.
2. Имеется центр обработки звонков с тремя уровнями сотрудников: оператор, менеджер и директор. Входящий телефонный
звонок адресуется свободному оператору. Если оператор не может обработать звонок, он автоматически перенаправляется
менеджеру. Если менеджер занят, то звонок перенаправляется директору. Разработайте классы и структуры данных для этой
задачи. Реализуйте метод dispatchCall(), который перенаправляет звонок первому свободному сотруднику.
3. Разработайте модель музыкального автомата, используя принципы ООП.
4. Разработайте модель автостоянки, используя принципы ООП.
5. Разработайте структуры данных для онлайн-библиотеки.
6. Как бы вы подошли к проектированию чат-сервера? Предоставьте информацию о компонентах внутренней подсистемы (backend),
классах и методах. Перечислите самые трудные задачи, которые необходимо решить.
7. Реализуйте класс CircularArray для представления структуры данных – аналога массива с эффективной реализацией
циклического сдвига. Если возможно, класс должен использовать обобщенный (geneгic) тип и поддерживать перебор в
стандартном синтаксисе (Obj о : circularArray).
8. Объясните, какие структуры данных и алгоритмы вы бы использовали для разработки файловой системы, хранящейся в
оперативной памяти. Напишите программный код, иллюстрирующий использование этих алгоритмов.
9. Спроектируйте и реализуйте хеш-таблицу, использующую связные списки для обработки коллизий.