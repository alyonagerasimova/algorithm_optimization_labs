package lab_5;

//10. Имеется 1000 бутылок лимонада, ровно одна из которых отравлена. Также у вас есть 10 тестовых полосок для обнаружения
//        яда. Даже одна капля яда окрашивает полоску и делает ее непригодной для дальнейшего использования. На тестовую полоску
//        можно одновременно нанести любое количество капель, и одна полоска может использоваться сколько угодно раз (при условии,
//        что все пробы были отрицательными). Однако вы можете проводить испытания не чаще одного раза в день, а для получения
//        результата с момента проведения проходит семь дней. Как найти отравленную бутылку за минимальное количество дней?
//        Напишите программную модель вашего решения.
public class Test {

    //1000 бутылок
    //10 тестовых полосок, которые могут использоваться более 1 раза при отриц результате
    //Испытания не чаще 1 раза в день
    //После испытания для получения результата проходит 7 дней
    //Минимальное количество дней, чтобы найти отравленную бутылку


    public static int findPoisonedBottle(){
        int[] bottle = new int[1000];
        int[] testStrip = new int[10];
        int index = (int) (Math.random() * 10);
        boolean test = false;
        System.out.println(index);

        for (int i = 0; i < bottle.length; i++){
            bottle[i] = i;
            while(i < 10){
                testStrip[i] = 1<<i;
            }
        }
        for (int j = 0; j < bottle.length; ){
            test = (j + testStrip[j]) == index;
            j = j + 100;
//            System.out.println("7 дней");
        }

        if(test){
            return index;
        }

        return 0;
    }

    public static void main(String[] args) {
        findPoisonedBottle();
    }
}
